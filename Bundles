local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Animation IDs
local MOVE_ANIM_ID = "rbxassetid://85811471336028"
local IDLE_ANIM_ID = "rbxassetid://139433213852503"

-- Load animations
local moveAnim = Instance.new("Animation")
moveAnim.AnimationId = MOVE_ANIM_ID
local moveTrack = humanoid:LoadAnimation(moveAnim)

local idleAnim = Instance.new("Animation")
idleAnim.AnimationId = IDLE_ANIM_ID
local idleTrack = humanoid:LoadAnimation(idleAnim)

-- Current playing animation
local currentTrack = nil

-- Function to stop all other animations except the one we want
local function stopAllOtherAnimations(exceptTrack)
	for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
		if track ~= exceptTrack then
			track:Stop(0.2) -- fade out smoothly over 0.2 seconds
		end
	end
end

-- Update animation based on movement
local function updateAnimation()
	local moveSpeed = humanoid.MoveDirection.Magnitude

	if moveSpeed > 0 then
		if currentTrack ~= moveTrack then
			stopAllOtherAnimations(moveTrack)
			moveTrack:Play()
			currentTrack = moveTrack
		end
	else
		if currentTrack ~= idleTrack then
			stopAllOtherAnimations(idleTrack)
			idleTrack:Play()
			currentTrack = idleTrack
		end
	end
end

-- Connect the Heartbeat to update animation every frame for smooth transition
game:GetService("RunService").Heartbeat:Connect(updateAnimation)
